<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>乔鲁诺正牌女友</title>
  
  
  <link href="https://huatingzhihoudahao.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://huatingzhihoudahao.github.io/blog/"/>
  <updated>2021-05-03T06:27:27.345Z</updated>
  <id>https://huatingzhihoudahao.github.io/blog/</id>
  
  <author>
    <name>做秧歌star的女人</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>msp430g2频率计</title>
    <link href="https://huatingzhihoudahao.github.io/blog/2021/05/03/msp430g2%E9%A2%91%E7%8E%87%E8%AE%A1/"/>
    <id>https://huatingzhihoudahao.github.io/blog/2021/05/03/msp430g2%E9%A2%91%E7%8E%87%E8%AE%A1/</id>
    <published>2021-05-03T04:34:55.000Z</published>
    <updated>2021-05-03T06:27:27.345Z</updated>
    
    <content type="html"><![CDATA[<p>可以测频率和脉宽，用的Timer_A的捕获模式</p><p>aaaaaaaaaa g2有一个定时器_A</p><p>可以测频率和脉宽，用的Timer_A的捕获模式</p><p>板载资源用了P1.2的定时器</p><p><img src="LaunchPadMSP430G2553.jpg" alt="G2"></p><pre><code class="c">#include &lt;msp430.h&gt; unsigned int temp1=0,temp2=0,temp3=0,temp4=0;time1=0,time2=0,time3=0,time4=0;unsigned int cap_flag=0;int overflow=0;long hz=0,maikuan=0;int main(void)&#123;    WDTCTL = WDTPW | WDTHOLD;    // Stop watchdog timer    BCSCTL1 = CALBC1_16MHZ;    DCOCTL = CALDCO_16MHZ;    //P1.2           通用型数字 I/O 引脚    //TA0.2            Timer0_A，捕捉：CCI1A 输入，比较：Out1 输出  P1SEL|=BIT2;//1.2开第二功能  P1DIR&amp;=~BIT2;//1.2设为读  TA0CTL|=TASSEL_2+MC_2+ TACLR+TAIE;  //smclk 16Mhz,不分频,连续计数,置位，开溢出中断  TA0CCTL1|=CM_1+CCIE+CAP+CCIS_0;//上升沿捕获，捕获使能  _EINT();  while(1);&#125;#pragma vector=TIMER0_A1_VECTOR//  响应CCR1的CCIFG CCR2的CCIFG 和溢出中断TAIFG__interrupt void Timer0_A1(void)&#123;     switch( TA0IV ) //查TAIV看是哪个中断响应    &#123; case 2:              cap_flag++; //CCR1的CCIFG              if(cap_flag==1)//第一次检测的是上升沿              &#123; overflow=0;                TA0CCTL1&amp;=~CM_1;                TA0CCTL1|=CM_2;//改成下降沿捕获                TA0CTL|= TACLR; //清定时器              &#125;              if(cap_flag==2)//这次捕获的是下降沿              &#123;  temp1=TA0CCR1;                 time1=overflow;                 TA0CCTL1&amp;=~CM_2;                 TA0CCTL1|=CM_1;//改成上升沿捕获              &#125;              if(cap_flag==3)//这次是上升沿捕获              &#123;                temp2=TA0CCR1;                time2=overflow;                hz=16000000/(time2*65536+temp2); //第二次计数的ccr1会经过可能一些周期，所以记得overflow*65536                maikuan=((time1*65536+temp1)*100)/(time2*65536+temp2);                cap_flag=0;              &#125;              break;     case 4:              break;     case 10: overflow++;//溢出中断的TAIFG,溢出一次加1          break;     &#125;&#125;//这里遇到了一个问题，就是配置CCTL|=CM_1之后，想要改为CM_2,要先&amp;=~CM_1，再|=CM_2//不然先|=CM_1,和010000……或    再|=CM_2,和10000……或，合起来就是11000……，也就是配置成了CM_3上下沿都捕获</code></pre><p>效果如图，输入是占空比30%，频率900hz的矩形波</p><p><img src="%E6%95%88%E6%9E%9C.jpg" alt="G2"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;可以测频率和脉宽，用的Timer_A的捕获模式&lt;/p&gt;
&lt;p&gt;aaaaaaaaaa g2有一个定时器_A&lt;/p&gt;
&lt;p&gt;可以测频率和脉宽，用的Timer_A的捕获模式&lt;/p&gt;
&lt;p&gt;板载资源用了P1.2的定时器&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;LaunchPadMSP43</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://huatingzhihoudahao.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="msp430g2" scheme="https://huatingzhihoudahao.github.io/blog/tags/msp430g2/"/>
    
    <category term="ccs" scheme="https://huatingzhihoudahao.github.io/blog/tags/ccs/"/>
    
    <category term="Timer_A中断" scheme="https://huatingzhihoudahao.github.io/blog/tags/Timer-A%E4%B8%AD%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>msp430g2之IO外部中断</title>
    <link href="https://huatingzhihoudahao.github.io/blog/2021/05/03/msp430g2%E4%B9%8BIO%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/"/>
    <id>https://huatingzhihoudahao.github.io/blog/2021/05/03/msp430g2%E4%B9%8BIO%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/</id>
    <published>2021-05-02T18:59:55.000Z</published>
    <updated>2021-05-03T04:21:23.399Z</updated>
    
    <content type="html"><![CDATA[<p>同样云端ccs开发，结合g2手册和指导书食用</p><p>用的是P1_3 push2 的外部中断</p><p><img src="LaunchPadMSP430G2553.jpg" alt="G2"></p><p><img src="1.jpg" alt="G2"></p><p><img src="2.png" alt="G2"></p><p><img src="3.jpg" alt="G2"></p><p>g2有P1P2两列外部IO中断,需要用PXIE对IO中断使能，IES设置上下边沿触发，REN设置上拉下拉</p><p>&amp;= ~是置0，进入中断之后，中断标志位会自动置1，需要PXIFG=0手动清成0.（有的会做成硬件清0，但是如果懒得查它到底自动不自动，还是直接软件清零吧）</p><p>中断向量是vector=PORT1_VECTOR    </p><pre><code class="c">#include &lt;msp430.h&gt;int main(void)&#123;  WDTCTL = WDTPW + WDTHOLD;                 // Stop watchdog timer  P1DIR |= BIT0;                            // Set P1.0 to output direction  P1IE |=  BIT3;                            // P1.3 interrupt enabled  P1IES |= BIT3;                            // P1.3 Hi/lo edge  P1REN |= BIT3;                            // Enable Pull Up on SW2 (P1.3)  P1IFG &amp;= ~BIT3;                           // P1.3 IFG cleared                                                            //BIT3 on Port 1 can be used as Switch2                                              __bis_SR_register(LPM4_bits + GIE);       // Enter LPM4 w/interrupt  //把SR寄存器的GIE位置位，也可以用_enable_interrupts();  即总中断使能   //LPM4是low power node4 直接进入低功耗模式，会被中断唤醒然后接着睡&#125;/*// Port 1 interrupt service routine#if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)#pragma vector=PORT1_VECTOR//这个是给中断向量表进行赋值的__interrupt void Port_1(void)//关键字__interrupt则表示这个函数是中断服务函数这种特殊函数。#elif defined(__GNUC__) //这玩意是gcc主版本号，安装gcc了都能过预编译void __attribute__ ((interrupt(PORT1_VECTOR))) Port_1 (void)//GNU C 的一大特色就是__attribute__ 机制。attribute 可以设置函数属性（Function Attribute）、变量属性（Variable Attribute）和类型属性（Type Attribute）。这里是设置Port_1函数为PORT1_VECTOR的中断向量#else#error Compiler not supported!#endif&#123;  P1OUT ^= BIT0;                            // P1.0 = toggle  P1IFG &amp;= ~BIT3;                           // P1.3 IFG cleared&#125;*///其实大家可以不用这么写,这么写就行。#pragma vector=PORT1_VECTOR__interrupt void Port_1(void)&#123;  P1OUT ^= BIT0;                            // P1.0 = toggle  P1IFG &amp;= ~BIT3;                           // P1.3 IFG cleared&#125;</code></pre><p><img src="4.jpg" alt="G2"></p><p>P1八个IO共用这一个中断，如果想要辨别是哪个端口出的低电平，就用IFG来判断，IFG进入中断就硬件置1了。</p><p>用((P1IN&amp;Push_Key)==0)    来确保此刻是按下的，即P1那个导致进入中断的端口还处于低电平还没有恢复原状。</p><pre><code class="c">voidP1_IODect()&#123;unsigned int Push_Key=0;Push_Key=P1IFG&amp;(~P1DIR);//代码1：检测所有输入IO，确保只有1个IO中断被“记录”//----延时一段时间，避开机械抖动区域------__delay_cycles(10000);//代码2：消灭下降沿2、3、5//----判断按键状态是否与延时前一致------if((P1IN&amp;Push_Key)==0) //代码3：专门消灭下降沿4&#123;//----判断具体哪个IO被按下，调用该IO的事件处理函数    switch(Push_Key)//代码4：不用P1IN来判断，以确保有且只有1按键响应    &#123;        case BIT0: P10_Onclick();break;        case BIT1: P11_Onclick();break;        case BIT2: P12_Onclick();break;        case BIT3: P13_Onclick();break;        case BIT4: P14_Onclick();break;        case BIT5: P15_Onclick();break;        case BIT6: P16_Onclick();break;        case BIT7: P17_Onclick();break;        default:break;    &#125;&#125;</code></pre><p>P1x_Onclick()自己定义。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;同样云端ccs开发，结合g2手册和指导书食用&lt;/p&gt;
&lt;p&gt;用的是P1_3 push2 的外部中断&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;LaunchPadMSP430G2553.jpg&quot; alt=&quot;G2&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;1.jpg&quot; alt=&quot;G2&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://huatingzhihoudahao.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="msp430g2" scheme="https://huatingzhihoudahao.github.io/blog/tags/msp430g2/"/>
    
    <category term="ccs" scheme="https://huatingzhihoudahao.github.io/blog/tags/ccs/"/>
    
    <category term="IO外部中断" scheme="https://huatingzhihoudahao.github.io/blog/tags/IO%E5%A4%96%E9%83%A8%E4%B8%AD%E6%96%AD/"/>
    
  </entry>
  
  <entry>
    <title>msp430g2之点亮第一个小灯</title>
    <link href="https://huatingzhihoudahao.github.io/blog/2021/05/02/msp430g2%E4%B9%8B%E7%82%B9%E4%BA%AE%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%81%AF/"/>
    <id>https://huatingzhihoudahao.github.io/blog/2021/05/02/msp430g2%E4%B9%8B%E7%82%B9%E4%BA%AE%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%81%AF/</id>
    <published>2021-05-02T12:04:45.000Z</published>
    <updated>2021-05-02T19:04:48.058Z</updated>
    
    <content type="html"><![CDATA[<p>本次开发用云端ccs开发，结合launchpad指导手册（教程）和g2用户手册（看寄存器）食用</p><p>板载资源就用了一个灯P1_0的red_led，时钟源全部默认</p><p><img src="LaunchPadMSP430G2553.jpg" alt="G2"></p><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="msp家的所有例程上ti官网找mspware-https-dev-ti-com-tirex-explore-啥都有-直接云端开发就行。"><a href="#msp家的所有例程上ti官网找mspware-https-dev-ti-com-tirex-explore-啥都有-直接云端开发就行。" class="headerlink" title="msp家的所有例程上ti官网找mspware   https://dev.ti.com/tirex/explore/    啥都有   直接云端开发就行。"></a>msp家的所有例程上ti官网找mspware   <a href="https://dev.ti.com/tirex/explore/">https://dev.ti.com/tirex/explore/</a>    啥都有   直接云端开发就行。</h2><h4 id="先从点亮一个led灯开始吧。。。"><a href="#先从点亮一个led灯开始吧。。。" class="headerlink" title="先从点亮一个led灯开始吧。。。"></a>先从点亮一个led灯开始吧。。。</h4><p>读写IO都需要设置PxDIR 高电平输出（往外写）   低电平输入（往内读）</p><p>CPU读IO，实际上是读PxIN寄存器。</p><p>CPU写IO，实际是写PxOUT寄存器。</p><p>g2寄存器一般是八位，平时要么用十六进制表示八位  0x01  每位自己设</p><p>要么用P1DIR |= BIT0;   BIT0是00000001，|=是按位或，有1则1，这些的话最后一位会被置1 其他不变。</p><p>提示：作为高阻输入IO时，务必关掉内部上下拉电阻开关PxREN，否则输入就不是高阻态了。（悬空就是高阻态，至于为什么要上下拉我也不知道了，建议看指导手册IO结构图）</p><pre><code class="C">#include &lt;msp430.h&gt;int main(void)&#123;    volatile unsigned int i;                  //volatile是一个特征修饰符（type specifier）.volatile的作用是作为指令关键字，确保本条指令不会因编译器的优化而省略，且要求每次直接读值。    WDTCTL = WDTPW + WDTHOLD;                 // Stop watchdog timer    P1DIR |= 0x01;                            // Set P1.0 to output direction  看引脚图可以看到是1_0是红灯    while(1)    &#123;        P1OUT ^= 0x01;                        // Toggle P1.0 using exclusive-OR     和00000001异或      //  P1OUT =~P1OUT;   //位操作取反        for (i=10000; i&gt;0; i--);  &#125;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本次开发用云端ccs开发，结合launchpad指导手册（教程）和g2用户手册（看寄存器）食用&lt;/p&gt;
&lt;p&gt;板载资源就用了一个灯P1_0的red_led，时钟源全部默认&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;LaunchPadMSP430G2553.jpg&quot; alt=&quot;G2&quot;</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://huatingzhihoudahao.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="msp430g2" scheme="https://huatingzhihoudahao.github.io/blog/tags/msp430g2/"/>
    
    <category term="ccs" scheme="https://huatingzhihoudahao.github.io/blog/tags/ccs/"/>
    
    <category term="GPIO" scheme="https://huatingzhihoudahao.github.io/blog/tags/GPIO/"/>
    
  </entry>
  
  <entry>
    <title>msp430g2553的示波器</title>
    <link href="https://huatingzhihoudahao.github.io/blog/2021/05/02/msp430g2553%E7%9A%84%E4%B8%B2%E5%8F%A3%E5%B1%8F%EF%BC%88%E5%8A%A0%E6%8C%89%E9%92%AE%EF%BC%89/"/>
    <id>https://huatingzhihoudahao.github.io/blog/2021/05/02/msp430g2553%E7%9A%84%E4%B8%B2%E5%8F%A3%E5%B1%8F%EF%BC%88%E5%8A%A0%E6%8C%89%E9%92%AE%EF%BC%89/</id>
    <published>2021-05-02T03:03:09.137Z</published>
    <updated>2021-05-03T04:42:25.607Z</updated>
    
    <content type="html"><![CDATA[<p>g2是我大一学的，上手的第一块板子，开发用的ccs，就算之后用什么高级板子什么ide，我也没忘了这糟糠之妻（因为它实在是太适合新手上手了–它的教程写的实在太好了，就那本launchpad开发指南，详细易懂还严谨）。</p><h3 id="板载资源"><a href="#板载资源" class="headerlink" title="板载资源"></a>板载资源</h3><h3 id><a href="#" class="headerlink" title></a></h3><p><img src="LaunchPadMSP430G2553.jpg" alt="G2"></p><p>从energia官网下载的pinmaps（energia是一个高度类似arduino的编译环境，虽然不能断点调试只能串口调试，但是官网这个真的香，TI家的板子大部分都有，而且还能导入到ccs调试）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;g2是我大一学的，上手的第一块板子，开发用的ccs，就算之后用什么高级板子什么ide，我也没忘了这糟糠之妻（因为它实在是太适合新手上手了–它的教程写的实在太好了，就那本launchpad开发指南，详细易懂还严谨）。&lt;/p&gt;
&lt;h3 id=&quot;板载资源&quot;&gt;&lt;a href=&quot;#板</summary>
      
    
    
    
    <category term="嵌入式" scheme="https://huatingzhihoudahao.github.io/blog/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
    <category term="msp430g2" scheme="https://huatingzhihoudahao.github.io/blog/tags/msp430g2/"/>
    
    <category term="uart通信" scheme="https://huatingzhihoudahao.github.io/blog/tags/uart%E9%80%9A%E4%BF%A1/"/>
    
    <category term="uart中断" scheme="https://huatingzhihoudahao.github.io/blog/tags/uart%E4%B8%AD%E6%96%AD/"/>
    
    <category term="ccs" scheme="https://huatingzhihoudahao.github.io/blog/tags/ccs/"/>
    
  </entry>
  
  <entry>
    <title>鉴于我的bug体质这里可能有你需要的大部分hexo主题相关解决方案</title>
    <link href="https://huatingzhihoudahao.github.io/blog/2021/04/30/bug%20in%20first%20blog/"/>
    <id>https://huatingzhihoudahao.github.io/blog/2021/04/30/bug%20in%20first%20blog/</id>
    <published>2021-04-30T15:34:15.420Z</published>
    <updated>2021-05-02T17:02:06.054Z</updated>
    
    <content type="html"><![CDATA[<p>BUG</p><h2 id="tips-改完得hexo-clean-g-d-来一趟上传上去（如果搞完了还是没好，可能是网太烂，换一个网8）-如果改了module的js之类的，务必要clean！！！"><a href="#tips-改完得hexo-clean-g-d-来一趟上传上去（如果搞完了还是没好，可能是网太烂，换一个网8）-如果改了module的js之类的，务必要clean！！！" class="headerlink" title="tips.改完得hexo clean g d 来一趟上传上去（如果搞完了还是没好，可能是网太烂，换一个网8）    如果改了module的js之类的，务必要clean！！！"></a><em>tips.改完得hexo clean g d 来一趟上传上去（如果搞完了还是没好，可能是网太烂，换一个网8）    如果改了module的js之类的，务必要clean！！！</em></h2><h2 id="1-本地显示正常，上传的网站css渲染不出来or一片空白"><a href="#1-本地显示正常，上传的网站css渲染不出来or一片空白" class="headerlink" title="1.本地显示正常，上传的网站css渲染不出来or一片空白"></a>1.本地显示正常，上传的网站css渲染不出来or一片空白</h2><p>改_config,     url: https://用户名.github.io/rep名    root:/rep名/    </p><pre><code>url: https://huatingzhihoudahao.github.io/blog/root: /blog/</code></pre><p>然后自己的网站名就成了<a href="https://huatingzhihoudahao.github.io/blog/">https://huatingzhihoudahao.github.io/blog/</a></p><p>我是从后面9来的，插图片更换插件代码，没能成功，改了url为<a href="https://huatingzhihoudahao.github.io才成功../">https://huatingzhihoudahao.github.io才成功。。</a></p><h2 id="2-文件在上传的网站上无显示"><a href="#2-文件在上传的网站上无显示" class="headerlink" title="2.文件在上传的网站上无显示"></a>2.文件在上传的网站上无显示</h2><p>注意的deploy的branch和github pages的是否一致，一开始我用的master，github的仓库里倒是有了，但是网站显示的是gh。</p><pre><code>branch: gh-pages</code></pre><p>以及注意主题选的啥玩意。。。（我选的是github pages推的merlot，是个 jekyll 的主题。。根本不是hexo的，由于那个主题实在是好看我又跑去搭jekyll，结果有个什么玩意又要0.3.6的又要0.4.0的没整好，不了了之。。换回hexo了，hexo还是简单点…）</p><h2 id="3-换主题之后上传的网站一片空白"><a href="#3-换主题之后上传的网站一片空白" class="headerlink" title="3.换主题之后上传的网站一片空白"></a>3.换主题之后上传的网站一片空白</h2><p>看自己主题的作者的md，以及issue (我下的是据作者说有lofter那味儿的snark，有个搜索功能，需要自己在yml里添加一下)</p><pre><code>search:    path: search.xml    field: post</code></pre><h2 id="4-上传网站主题的头像是本地图片，然而显示不出来"><a href="#4-上传网站主题的头像是本地图片，然而显示不出来" class="headerlink" title="4.上传网站主题的头像是本地图片，然而显示不出来"></a>4.上传网站主题的头像是本地图片，然而显示不出来</h2><p>这招是乐哥教的，按住fn 和f12，查看源码，点左上角第一个的框框，即选中一个元素进行检查，然后点到没出来的图片上，可以看到对应的代码位置。我的是这个</p><pre><code>&lt;img class=&quot;nofancybox&quot; src=&quot;/img/profile.jpg&quot; width=&quot;128&quot; height=&quot;128&quot;&gt;</code></pre><p>把斜杠去掉，（本地好像是得加一个空格）   </p><pre><code>&lt;img class=&quot;nofancybox&quot; src=&quot;img/profile.jpg&quot; width=&quot;128&quot; height=&quot;128&quot;&gt;</code></pre><p>不过这些改了没用，只是当前页面有用，再打开一回还是原来那样，所以去改主题源码吧，一般在主题的layout 的_partial底下，挺多的，抽奖找文件吧？我的是在nav-menu，斜杠删了就行</p><pre><code>        a(class=&quot;hdimg img&quot; href=&quot;/&quot;)            img(src=&quot;img/profile.jpg&quot; class=&quot;nofancybox&quot; width=&quot;128&quot; height=&quot;128&quot;)        h1.ttl            a(href=&quot;/&quot;)= config.title</code></pre><p>src=”img/profile.jpg” 这种路径貌似系统可以自动补<a href="https://huatingzhihoubalabalabala之类的前缀？">https://huatingzhihoubalabalabala之类的前缀？</a></p><h2 id="5-上传网站主题的background-png加载不出来"><a href="#5-上传网站主题的background-png加载不出来" class="headerlink" title="5.上传网站主题的background.png加载不出来"></a>5.上传网站主题的background.png加载不出来</h2><p>同4理，看控制台 ，底下有几个error 锁定一下， 我的在style.scss，感觉把路径改对就行，我改的是绝对路径（记得改源码里的）</p><pre><code>body &#123;  background-image: url(https://github.com/huatingzhihoudahao/blog/blob/gh-pages/img/backgroud.png);</code></pre><p>其实我的显示不出来也看不出来，因为默认就是藏蓝色，本来想换成米斯达的，但是好像这样和头像更搭一点。</p><p>淦，跨源读取阻止(CORB)功能阻止了 MIME 类型为 text/html 的跨源响应。。。。</p><p>我发现我当时截的url咋莫名其妙带了个blob，于是返回了上一级，然后拼起来，用了这个</p><pre><code>    background-image: url(https://github.com/huatingzhihoudahao/blog/tree/gh-pages/img/backgroud.png);</code></pre><p>nice~ 好使了 没报错了   </p><p>(我是后面来的 这里好了个锤子，github.com和huatingzhoudahao.github.io （这是不放域名只放图片的时候，终端显示的读取路径） 算是主域名不同？ 貌似是跨域的，我点开这个io，就是在这个io的html下，然后又设定去<a href="https://github.com/huatingzhihoudahaobalabala%E8%BF%99%E8%BE%B9%E5%8F%96%EF%BC%8C%E5%BA%94%E8%AF%A5%E5%B0%B1%E6%98%AF%E8%B7%A8%E5%9F%9F%E5%90%A7%E3%80%82%E8%B7%A8%E5%9F%9F%E6%8C%87%E7%9A%84%E6%98%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E8%83%BD%E6%89%A7%E8%A1%8C%E5%85%B6%E4%BB%96%E7%BD%91%E7%AB%99%E7%9A%84%E8%84%9A%E6%9C%AC%E3%80%82%E5%AE%83%E6%98%AF%E7%94%B1%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E9%80%A0%E6%88%90%E7%9A%84%EF%BC%8C%E6%98%AF%E6%B5%8F%E8%A7%88%E5%99%A8%E6%96%BD%E5%8A%A0%E7%9A%84%E5%AE%89%E5%85%A8%E9%99%90%E5%88%B6%E3%80%82%E6%89%80%E8%B0%93%E5%90%8C%E6%BA%90%E6%98%AF%E6%8C%87%EF%BC%8C%E5%9F%9F%E5%90%8D%EF%BC%8C%E5%8D%8F%E8%AE%AE%EF%BC%8C%E7%AB%AF%E5%8F%A3%E5%9D%87%E7%9B%B8%E5%90%8C)%E3%80%82">https://github.com/huatingzhihoudahaobalabala这边取，应该就是跨域吧。跨域指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器施加的安全限制。所谓同源是指，域名，协议，端口均相同)。</a>     至于关于blob什么意思为什么会出现加不加有无影响就没研究了，反正加不加都说我跨源。</p><p>举例</p><pre><code>http://www.123.com/index.html 调用 http://www.123.com/server.php （非跨域）http://www.123.com/index.html 调用 http://www.456.com/server.php （主域名不同:123/456，跨域）http://abc.123.com/index.html 调用 http://def.123.com/server.php （子域名不同:abc/def，跨域）http://www.123.com:8080/index.html 调用 http://www.123.com:8081/server.php （端口不同:8080/8081，跨域）http://www.123.com/index.html 调用 https://www.123.com/server.php （协议不同:http/https，跨域）请注意：localhost和127.0.0.1虽然都指向本机，但也属于跨域。————————————————版权声明：本文为CSDN博主「ouxiaoxian」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/ouxiaoxian/article/details/89332027</code></pre><p>这个我已经不管了。。。就这样吧懒得改了。。反正看不出有问题。。</p><p>现在的我是从第六个问题来的！！解决了！！</p><pre><code> background-image: url(https://huatingzhihoudahao.github.io/blog/img/backgroud.png);</code></pre><p>我实在是太蠢了。。。。。</p><h2 id="6-上传网站主题的头像，主页面显示出来了，点进博客里面就显示不出来"><a href="#6-上传网站主题的头像，主页面显示出来了，点进博客里面就显示不出来" class="headerlink" title="6.上传网站主题的头像，主页面显示出来了，点进博客里面就显示不出来"></a>6.上传网站主题的头像，主页面显示出来了，点进博客里面就显示不出来</h2><p>同4，5理由，控制台锁定error，发现图片位置是</p><pre><code>https://huatingzhihoudahao.github.io/blog/2021/04/30/hello-world/img/profile.jpg</code></pre><p>打开确实是没有的，我在想底下是最后生成的index.html</p><pre><code>&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/blog/js/ready.js&quot; async&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css&quot;&gt;&lt;body class=&quot;night&quot;&gt;&lt;div class=&quot;mobile-head&quot; id=&quot;mobile-head&quot;&gt;&lt;div class=&quot;navbar-icon&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;navbar-title&quot;&gt;&lt;a href=&quot;/&quot;&gt;LITREILY&lt;/a&gt;&lt;/div&gt;&lt;div class=&quot;navbar-search&quot;&gt;&lt;!--= show a circle here--&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;h-wrapper&quot; id=&quot;menu&quot;&gt;&lt;nav class=&quot;h-head box&quot;&gt;&lt;div class=&quot;m-hdimg&quot;&gt;&lt;a class=&quot;hdimg img&quot; href=&quot;/&quot;&gt;&lt;img class=&quot;nofancybox&quot; src=&quot;img/profile.jpg&quot;</code></pre><p>在控制台报错是GET <a href="https://huatingzhihoudahao.github.io/blog/2021/04/30/hello-world/img/profile.jpg">https://huatingzhihoudahao.github.io/blog/2021/04/30/hello-world/img/profile.jpg</a> 404      或许是因为src=”img/profile.jpg”的写法是相对路径？，</p><p>于是我把</p><pre><code>&lt;img class=&quot;nofancybox&quot; src=&quot;/img/profile.jpg&quot; width=&quot;128&quot; height=&quot;128&quot;&gt;</code></pre><p>改成</p><pre><code>img(src=&quot;https://github.com/huatingzhihoudahao/blog/tree/gh-pages/img/profile.jpg&quot;</code></pre><p>失败了。。控制台虽然没错误了，但是根本没显示出来，而且控制台报了5以及和5一样的错。。。阻止跨源响应。。。。让我怀疑我的5是不是自己看错了其实根本没解决。。</p><pre><code>跨源读取阻止(CORB)功能阻止了 MIME 类型为 text/html 的跨源响应 https://github.com/huatingzhihoudahao/blog/blob/gh-pages/img/profile.jpg。有关详细信息，请参阅 https://www.chromestatus.com/feature/5629709824032768。style.css:1 跨源读取阻止(CORB)功能阻止了 MIME 类型为 text/html 的跨源响应 https://github.com/huatingzhihoudahao/blog/blob/gh-pages/img/backgroud.png。有关详细信息，请参阅 https://www.chromestatus.com/feature/562970982403278</code></pre><p>我改成</p><pre><code> img(src=&quot;Access-Control-Allow-Origin:https://github.com/huatingzhihoudahao/blog/tree/gh-pages/img/profile.jpg&quot;</code></pre><p>也不行，说我</p><pre><code>Failed to load resource: net::ERR_UNKNOWN_URL_SCHEME</code></pre><p>估计是写法有问题，改成</p><pre><code>img(src=&quot;Access-Control-Allow-Origin:github.com/huatingzhihoudahao/blog/tree/gh-pages/img/profile.jpg&quot;</code></pre><p>一样的net::ERR_UNKNOWN_URL_SCHEME.于是加了个标签</p><pre><code>img(crossOrigin=&quot;Anonymous&quot; </code></pre><p>还是不行。。</p><p>我又全部退回去，返回到一开始的删掉斜杠</p><pre><code>&lt;img class=&quot;nofancybox&quot; src=&quot;img/profile.jpg&quot; width=&quot;128&quot; height=&quot;128&quot;&gt;</code></pre><p>img的src规则是这样的，如果是<a href="http://balablabal/img/xxx.jpg">http://balablabal/img/xxx.jpg</a>  这种系统是不会做什么的 读就直接读的这个url</p><p>但如果写img/profile.jpg，他就会默认把前面补上 当前页面的头 比如<a href="https://huatingzhihoudahao.github.io/blog/archives/img/profile.jpg">https://huatingzhihoudahao.github.io/blog/archives/img/profile.jpg</a>  补成这个样子（这个是我点击归档出来的路径）  是没有的 所以会显示不出来</p><p>如果是主页面,会补成这个样子<a href="https://huatingzhihoudahao.github.io/blog/img/profile.jpg">https://huatingzhihoudahao.github.io/blog/img/profile.jpg</a>   ，是有的，所以可以显示。如果是归档啊 关于啊 之类的 可以自己在本地搭建hexo的地方（比如我是在myblog部署的git）找source，找about啊归档啊标签啊之类的（hexo new 出来的文件夹） ，在里面新建一个img文件夹把图片扔进去。上传之后 可以保证在io上点进归档是可以显示头像的。但是md文档的点进去出不了头像怎么解决还不知道。</p><p>!!!我知道怎么解决这些问题了！！统统用<a href="https://huatingzhihoudahao.github.io/blog/img/profile.jpg%EF%BC%81%EF%BC%81">https://huatingzhihoudahao.github.io/blog/img/profile.jpg！！</a> 为什么我想绝对路径的时候只想到到github.com/balaba那个地方呢！直接io/balabala  不就行了！</p><p>n！i！c！e！！！（虽然之前的我实在是太傻了。。。怎么就脑子没转过弯来）</p><h2 id="7-根据主题作者提示安装npm-install-hexo-renderer-pug-–save的问题"><a href="#7-根据主题作者提示安装npm-install-hexo-renderer-pug-–save的问题" class="headerlink" title="7.根据主题作者提示安装npm install hexo-renderer-pug –save的问题"></a>7.根据主题作者提示安装npm install hexo-renderer-pug –save的问题</h2><h4 id="7-1出现18-packages-are-looking-for-funding-run-npm-fund-for-details"><a href="#7-1出现18-packages-are-looking-for-funding-run-npm-fund-for-details" class="headerlink" title="7.1出现18 packages are looking for funding   run npm fund for details"></a>7.1出现18 packages are looking for funding   run <code>npm fund</code> for details</h4><p>其实就是求打赏啦，可以run npm fund看链接点击去打赏，不想打赏就</p><pre><code>npm install hexo-renderer-pug --save --no-fund</code></pre><h4 id="7-2出现found-1-high-severity-vulnerability：-run-npm-audit-fix-to-fix-them-or-npm-audit-for-details"><a href="#7-2出现found-1-high-severity-vulnerability：-run-npm-audit-fix-to-fix-them-or-npm-audit-for-details" class="headerlink" title="7.2出现found 1 high severity vulnerability： run npm audit fix to fix them, or npm audit for details"></a>7.2出现found 1 high severity vulnerability： run <code>npm audit fix</code> to fix them, or <code>npm audit</code> for details</h4><p>在431扫描包中找到1个高度严重性漏洞1漏洞需要手动审查。有关详细信息，请参阅完整报告。</p><pre><code>npm audit --json</code></pre><p>查看详细报告</p><pre><code> &quot;overview&quot;: &quot;### Impact\n\nIn affected versions of `pug` and `pug-code-gen`, if a remote attacker was able to control the `pretty` option of the pug compiler, e.g. if you spread a user provided object such as the query parameters of a request into the pug template inputs, it was possible for them to achieve remote code execution on the node.js backend.\n\n### Patches\n\nUpgrade to `pug@3.0.1` or `pug-code-gen@3.0.2` or `pug-code-gen@2.0.3`, which correctly sanitise the parameter.\n\n### Workarounds\n\nIf there is no way for un-trusted input to be passed to pug as the `pretty` option, e.g. if you compile templates in advance before applying user input to them, you do not need to upgrade.&quot;,      &quot;recommendation&quot;: &quot;Upgrade `pug` to version 3.0.1&quot;,      &quot;references&quot;: &quot;- [GitHub Advisory](https://github.com/advisories/GHSA-p493-635q-r6gr)\n- [CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-21353)\n- [Similar advisory for `pug-code-gen`](https://www.npmjs.com/advisories/1644)&quot;,</code></pre><p>是pug要升级（直接npm audit fix –force没用会说要手动升级）所以去references网站下载。。</p><p>网站让我直接npm install pug   版本是3.0.2   但是最后还是给我报高危漏洞要升级。。</p><p>不管了。。。。</p><p>因为我发现照着作者说的插件安了一通之后 好像没有报search xml之类的错了 </p><p>以及发现有人说npm安装的时候用cmd安装，，我用的是git bash。然而都一样都会报这个问题</p><h2 id="8-点击头像或者about之类的不能像原主题显示的那样跳转到主页面而是404"><a href="#8-点击头像或者about之类的不能像原主题显示的那样跳转到主页面而是404" class="headerlink" title="8.点击头像或者about之类的不能像原主题显示的那样跳转到主页面而是404"></a>8.点击头像或者about之类的不能像原主题显示的那样跳转到主页面而是404</h2><p>我的正确打开路径是<a href="https://huatingzhihoudahao.github.io/blog/archives/">https://huatingzhihoudahao.github.io/blog/archives/</a></p><p>点击归档之类的标签就是<a href="https://huatingzhihoudahao.github.io/blog/archives/">https://huatingzhihoudahao.github.io/blog/archives/</a></p><p>点击头像就是<a href="https://huatingzhihoudahao.github.io/blog/%E6%98%AF404">https://huatingzhihoudahao.github.io/blog/是404</a></p><p>乐哥应该在js的脚本里设的？我找了一圈没找到。之后又用4，5的方法，找到了是 a href=“  ”这类的东西，前面会被自动加上<a href="https://huatingzhihoudahao.github.io比如我写a/">https://huatingzhihoudahao.github.io比如我写a</a> href=“/blog/tags/“,就会跳转到<a href="https://huatingzhihoudahao.github.io/blog/tags/">https://huatingzhihoudahao.github.io/blog/tags/</a></p><p>于是我到nav-menu的文件里把</p><pre><code>a(class=&quot;hdimg img&quot; href=&quot;/&quot;)  和 a(href=&quot;/&quot;)= config.title</code></pre><p>改成</p><pre><code>  a(class=&quot;hdimg img&quot; href=&quot;/blog/&quot;) 和  a(href=&quot;/blog/&quot;)= config.title</code></pre><p>成功</p><p>至于about和分类或者tags点进去空的，然后对应的url又不像是错的</p><p>点进去404会告诉我</p><pre><code>If this is your site, make sure that the filename case matches the URL.For root URLs (like http://example.com/) you must provide an index.html file.</code></pre><p>那是因为根本没有hexo new，以及没有hexo d  github上就没有index.html  所以new一下上传就行</p><pre><code>hexo new page tags</code></pre><h2 id="9-插图片到文本的问题"><a href="#9-插图片到文本的问题" class="headerlink" title="9.插图片到文本的问题"></a>9.插图片到文本的问题</h2><p><a href="https://www.jianshu.com/p/f72aaad7b852">https://www.jianshu.com/p/f72aaad7b852</a></p><p><a href="https://blog.csdn.net/xjm850552586/article/details/84101345">https://blog.csdn.net/xjm850552586/article/details/84101345</a></p><p>我是5/2的我，我又回来了，这玩意解析的路径在about是对的，在post那解析的不对。。应该解析成2021/4/30balabalba它解析的是.io   欺负我不会js呗。</p><p>我看了源码和网络改进版，他们一个能出about的一个能出post的</p><p><a href="https://blog.csdn.net/xjm850552586/article/details/84101345">https://blog.csdn.net/xjm850552586/article/details/84101345</a></p><p>这个不能给about加index前缀</p><p>原版的about可以加 但是post的解析不对</p><p>这是逼着我读js啊</p><p>改成这样就好了</p><pre><code>var version = String(hexo.version).split(&#39;.&#39;);hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;  var config = hexo.config;  if(config.post_asset_folder)&#123;        var link = data.permalink;    if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)       var beginPos = getPosition(link, &#39;/&#39;, 1) + 1;    else       var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;    var appendLink = &#39;&#39;;    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.    // if not with index.html endpos = link.lastIndexOf(&#39;.&#39;) + 1 support hexo-abbrlink    if(/.*\/index\.html$/.test(link)) &#123;      // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html      // image in xxtitle/ will go to xxtitle/index/      appendLink = &#39;index/&#39;;      var endPos = link.lastIndexOf(&#39;/&#39;);    &#125;    else &#123;      var endPos = link.lastIndexOf(&#39;/&#39;) + 1;    &#125;    link = link.substring(beginPos, endPos) + &#39;/&#39; + appendLink;</code></pre><p>我是从13回来的我，这个要求config的url不带root的blog  但是这样的话 转载注明出处那里（author）会点不带root的blog的url去 也就是404了，所以为了把转载注明出处那里不搞成404，我把url改了，于是图片显示就都有问题了。也不记得具体哪行代码导致问题。。反正直接删了config.root那一项不好使。具体看13吧。。（代码都是hexo-asset-image插件里的js）</p><h2 id="10-主题段落间距和主页面标题高度显示行数的问题"><a href="#10-主题段落间距和主页面标题高度显示行数的问题" class="headerlink" title="10.主题段落间距和主页面标题高度显示行数的问题"></a>10.主题段落间距和主页面标题高度显示行数的问题</h2><p>控制台看元素，在样式里勾选和不勾选以及更改代码，可以看到效果，一般标的有源码 ，我的在style.css。下面这个是段落间距</p><pre><code>.p-content &#123;    h2,h3,h4 &#123;       // margin: 1.6em 0 0.6em;       margin: 6em 0 0.6em;</code></pre><p>max-width是页面文章标题的宽度</p><pre><code>.p-desc &#123;    position: relative;    top: 0;    left: $art-left-offset;    width: 100%;    max-width: 1000px;</code></pre><p>  font-size: 是在页面文章标题显示的字体大小</p><pre><code>h1 &#123;  font-size: 20px;  line-height: 1.2;  margin: 0 0 36px;  &#125;</code></pre><p>下面这个是显示行数</p><pre><code>.p-desc &#123;    position: relative;    top: 0;    left: $art-left-offset;    width: 100%;    max-width: $art-width;    text-align: left;    padding: $art-padding;    margin-bottom: 20px;    background: $dark-float;    box-shadow: 0 0 40px rgba(0,0,0,0.5);    display: -webkit-box;    -webkit-line-clamp: 1;    -webkit-box-orient: vertical;    overflow: hidden&#125;.l-post  article.p-art &#123;    position: relative;    top: 0;    left: $art-left-offset;    width: 100%;    max-width: $art-width;    text-align: left;    padding: $art-padding;    margin-bottom: 20px;    background: $dark-float;    box-shadow: 0 0 40px rgba(0,0,0,0.5);&#125;</code></pre><p>具体看我的回答<a href="https://www.zhihu.com/question/51632133/answer/1864334646">https://www.zhihu.com/question/51632133/answer/1864334646</a></p><h2 id="12-网页吸色"><a href="#12-网页吸色" class="headerlink" title="12.网页吸色"></a>12.网页吸色</h2><p>控制台太方便了！！以后看到好看的颜色直接开控制台在找代码吸色！在#前面有框框可以打开</p><pre><code> color: #b9549d; </code></pre><h2 id="13-为了调img显示开始现学js"><a href="#13-为了调img显示开始现学js" class="headerlink" title="13.为了调img显示开始现学js.."></a>13.为了调img显示开始现学js..</h2><p>不管怎么样 反正这个在我url不带blog root是blog的情况下  终于可以既在about里显示又在post的md里显示了。。。。我吐了。。。我这个写法就是</p><p> 默认的没改动过的src是xxx.jpg</p><p>后来把src赋值成index+src（index   就是appendLink 就是’index/‘;）  </p><p>如果当前页面是about（即下面有index文件夹且有index.xml）  就在src前面赋一个’index/‘；</p><p>这样src就是’index/xxx.jpg’               前面没有/   这种是相对路径 会被网页自动添加当前页面头</p><p>也就是会被添加成我们想要的locahost:4000  /blog/about/  + index+xx.jpg</p><p>如果src是 ‘/index/xxx.jpg’,</p><p>就不会被添加，只会结合locahost:4000  成  locahost:4000  /index+xx.jpg</p><p>如果src是about/index/xxx.jpg   </p><p>就会被添加结合成locahost:4000 /blog/about/  + about/index+xx.jpg</p><p>如果src是blog/about/index/xxx.jpg   </p><p>就会被添加结合成locahost:4000 /blog/about/  + blog/about/index+xx.jpg</p><p>反正就是前面不能带/   不然就不能补全。     ps(hexo s 可以编译输出 用console.info)</p><pre><code class="javascript">&#39;use strict&#39;;var cheerio = require(&#39;cheerio&#39;);// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123;  return str.split(m, i).join(m).length;&#125;//split这个函数是在str查找m，找到就切分 分成i段，所以会找i-1个 mvar version = String(hexo.version).split(&#39;.&#39;);hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;  var config = hexo.config;  if(config.post_asset_folder)&#123;        var link = data.permalink;    // if(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)    //    var beginPos = getPosition(link, &#39;/&#39;, 1) + 1;    // else    //    var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;      var beginPos = getPosition(link, &#39;/&#39;, 3) + 1;    var appendLink = &#39;&#39;;    // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.    // if not with index.html endpos = link.lastIndexOf(&#39;.&#39;) + 1 support hexo-abbrlink      // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html      // image in xxtitle/ will go to xxtitle/index/    var endPos = link.lastIndexOf(&#39;/&#39;);      //public int lastIndexOf(String str): 返回指定子字符串在此字符串中最右边出现处的索引，如果此字符串中没有这样的字符，则返回 -1。      //比如这里本来是https://huatingzhihoudahao.github.io/blog/about/index.html   是截止到about        if(/.*\/index\.html$/.test(link)) &#123;      // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html      // image in xxtitle/ will go to xxtitle/index/     // appendLink =link.substring(beginPos, endPos)+ &#39;/index/&#39;;     appendLink =&#39;index/&#39;;     //appendLink =&#39;/index/&#39;;         &#125;    else &#123;    &#125;    //link = link.substring(beginPos, endPos) + &#39;/&#39; + appendLink;    link = appendLink;    var toprocess = [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];    for(var i = 0; i &lt; toprocess.length; i++)    &#123;      var key = toprocess[i];       var $ = cheerio.load(data[key], &#123;        ignoreWhitespace: false,        xmlMode: false,        lowerCaseTags: false,        decodeEntities: false      &#125;);      $(&#39;img&#39;).each      (function()        &#123;                      if ($(this).attr(&#39;src&#39;))//这个意思是返回这个节点（此处为img）的src属性的值                      //src就是xxx.jpg                      //$(this).attr(key); 获取节点属性名的值，相当于getAttribute(key)方法                       &#123;                              // For windows style path, we replace &#39;\&#39; to &#39;/&#39;.                              var src = $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;/&#39;); //var是申明变量                              if(!/http[s]*.*|\/\/.*/.test(src) &amp;&amp;!/^\s*\//.test(src))                              &#123;                                // For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.                                // In addition, to support multi-level local directory.                                var linkArray = link.split(&#39;/&#39;).filter(function(elem)                                //split不改变原本link的值                                                                                      &#123;                                                                                      return elem != &#39;&#39;;                                                                                      &#125;                                                                      );                          //   var srcArray = src.split(&#39;/&#39;).filter(function(elem)                          //                                                       &#123;                          //                                                       return elem != &#39;&#39; &amp;&amp; elem != &#39;.&#39;;                          //                                                       &#125;                          //                                       );                          //   if(srcArray.length &gt; 1)                          //   srcArray.shift();                          //   //shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。                          //  // src = srcArray;                          //   src = srcArray.join(&#39;/&#39;);                               // $(this).attr(&#39;src&#39;,   src);                               console.info&amp;&amp;console.info(link+&quot;&lt;/br&gt;&quot;);                                $(this).attr(&#39;src&#39;,   link+src);                                 //$(this).attr(key, value); 设置节点属性的值，相当于setAttribute(key,value)方法                                 console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+link + src);                              &#125;                      &#125;                      else                      &#123;                        console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);                        console.info&amp;&amp;console.info($(this));                      &#125;        &#125;      );      data[key] = $.html();    &#125;  &#125;&#125;);</code></pre><p>调试的过程中学了一点点点点js</p><p><img src="js-split.png" alt="G2"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;BUG&lt;/p&gt;
&lt;h2 id=&quot;tips-改完得hexo-clean-g-d-来一趟上传上去（如果搞完了还是没好，可能是网太烂，换一个网8）-如果改了module的js之类的，务必要clean！！！&quot;&gt;&lt;a href=&quot;#tips-改完得hexo-clean-g-d-来一趟</summary>
      
    
    
    
    <category term="hexo" scheme="https://huatingzhihoudahao.github.io/blog/categories/hexo/"/>
    
    
    <category term="-hexo搭建中的bug" scheme="https://huatingzhihoudahao.github.io/blog/tags/hexo%E6%90%AD%E5%BB%BA%E4%B8%AD%E7%9A%84bug/"/>
    
  </entry>
  
  <entry>
    <title>hexo指令</title>
    <link href="https://huatingzhihoudahao.github.io/blog/2021/04/30/hello-world/"/>
    <id>https://huatingzhihoudahao.github.io/blog/2021/04/30/hello-world/</id>
    <published>2021-04-30T12:51:00.746Z</published>
    <updated>2021-05-03T04:31:35.861Z</updated>
    
    <content type="html"><![CDATA[<p>记得指令都在部署git的文件下，我的是myblog 。三件套 hexo clean/ hexo g/ hexo d 不过网不好可能d不上去，再多试试</p><p>host new post xxx   建一个新的md，如果安装hexo-asset-image插件之后会自动创一个同名的文件夹用来放图片</p><p>host new page xxx 建一个新的page，如果想要添加到左边导航栏，需要自己在主题的_config里面更改 比如这个是我用的snark主题的meua  reference是我新加的 。new一个新page然后编译上传之后就会出现一个新的 一大堆前缀/blog/xxx/ 页面可以访问了。</p><pre><code>menu:  - page: 归档    directory: archives/  - page: 分类    directory: categories/  - page: 标签    directory: tags/  - page: 关于    directory: about/  - page: 参考书    directory: reference/  - page: rss    directory: atom.xml</code></pre><p>想插入pdf就百度一下 安一个pdf的插件，然后把pdf扔进source里，想在md里插pdf就写好绝对路径就行</p><p><img src="1.jpg" alt="1"></p><h4 id="Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub"><a href="#Welcome-to-Hexo-This-is-your-very-first-post-Check-documentation-for-more-info-If-you-get-any-problems-when-using-Hexo-you-can-find-the-answer-in-troubleshooting-or-you-can-ask-me-on-GitHub" class="headerlink" title="Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub."></a>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</h4><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记得指令都在部署git的文件下，我的是myblog 。三件套 hexo clean/ hexo g/ hexo d 不过网不好可能d不上去，再多试试&lt;/p&gt;
&lt;p&gt;host new post xxx   建一个新的md，如果安装hexo-asset-image插件之后会自动</summary>
      
    
    
    
    <category term="hexo" scheme="https://huatingzhihoudahao.github.io/blog/categories/hexo/"/>
    
    
    <category term="-hexo指令" scheme="https://huatingzhihoudahao.github.io/blog/tags/hexo%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
</feed>
